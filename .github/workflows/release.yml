name: Release New Version

on:
  push:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      

      - name: Create Production AppSettings
        shell: bash
        env:
          APPSETTINGS_JSON: ${{ secrets.PRODUCTION_APPSETTINGS }}
        run: echo "$APPSETTINGS_JSON" > ./StockControlSystem.API/appsettings.json

      - name: Publish API for Windows
        run: dotnet publish ./StockControlSystem.API -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -o ./publish/win-x64

      - name: Create API directory in client-app
        shell: bash
        run: mkdir -p ./client-app/api/win-x64

      - name: Copy Windows API to client-app
        shell: bash
        run: cp -r ./publish/win-x64/. ./client-app/api/win-x64/

      - name: Install client-app dependencies
        run: npm install
        working-directory: ./client-app

      - name: Build client-app
        run: npm run build
        working-directory: ./client-app

      - name: List client-app dist directory
        shell: bash
        run: ls -R ./client-app/dist
        working-directory: ./client-app

      - name: Package Electron app for Windows
        run: npx electron-builder --win --x64
        working-directory: ./client-app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get App Version
        id: get_version
        shell: bash
        run: |
          VERSION=$(node -p "require('./client-app/package.json').version")
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: client-app/release/

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows]
    permissions:
      contents: write

    steps:
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: release-artifacts/windows

      - name: Create and Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.build-windows.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            release-artifacts/windows/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}