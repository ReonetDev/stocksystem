// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockControlSystem.API.Data;

#nullable disable

namespace StockControlSystem.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250717104739_UpdatePRVDeviceCoordinates")]
    partial class UpdatePRVDeviceCoordinates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("StockControlSystem.API.Models.BusinessUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BusinessUnits");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("BusinessUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.Consumable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Consumables");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.DeliveryNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DelNoteNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DeliveryNotes");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.DeliveryNoteItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryNoteId")
                        .HasColumnType("int");

                    b.Property<int>("SerialStockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryNoteId");

                    b.HasIndex("SerialStockId");

                    b.ToTable("DeliveryNoteItems");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.PRVDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Advanced_Controller_Manufacturer")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Air_Valve_present")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Ball_valve_on_bonnet_present")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Ball_valves_present")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Chamber_Cover_present")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Chamber_Material")
                        .HasColumnType("longtext");

                    b.Property<double?>("Downstream_pressure")
                        .HasColumnType("double");

                    b.Property<double?>("Downstream_pressure_offpeak")
                        .HasColumnType("double");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double");

                    b.Property<bool?>("Leaking_fittings")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Lock_present")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Lock_working")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double");

                    b.Property<bool?>("Main_valve_respond_to_pilot_adjustment")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Meter_Functional")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Meter_Manufacturer")
                        .HasColumnType("longtext");

                    b.Property<string>("Meter_Serial_no")
                        .HasColumnType("longtext");

                    b.Property<int?>("Meter_Size")
                        .HasColumnType("int");

                    b.Property<string>("Meter_Type")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Needle_valve_present")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Needle_valve_scoured")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Needle_valve_turns")
                        .HasColumnType("longtext");

                    b.Property<string>("PRV_Make")
                        .HasColumnType("longtext");

                    b.Property<int?>("PRV_Size")
                        .HasColumnType("int");

                    b.Property<string>("PRV_Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pilot_Control_Mechanism")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Pilot_Present")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Pilot_make_offpeak")
                        .HasColumnType("longtext");

                    b.Property<string>("Pilot_make_peak")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Pilot_system_flush_bleed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Restrictor_Present")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<bool?>("Solenoid_Open")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Strainer_Dirt_Box")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Strainer_clean")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Strainer_present")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Sufficient_working_Room")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SupplyDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Technician")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Time_Modulated_Controller")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Upstream_pressure")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("PRVDevices");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.PRVService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastServiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("NextServiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PRVDeviceId")
                        .HasColumnType("int");

                    b.Property<string>("PRV_Make")
                        .HasColumnType("longtext");

                    b.Property<int?>("PRV_Size")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceInterval")
                        .HasColumnType("int");

                    b.Property<string>("ServiceType")
                        .HasColumnType("longtext");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<string>("SupplyDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PRVDeviceId");

                    b.HasIndex("SiteId");

                    b.ToTable("PRVServices");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.SerialStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SerialStock");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.ServiceDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttachmentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PRVServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PRVServiceId");

                    b.ToTable("ServiceDocuments");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.SimCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Allocated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MSISDN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Network")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PUK")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SimNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SimCards");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("RegionId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.Technician", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Technicians");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StockControlSystem.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.Client", b =>
                {
                    b.HasOne("StockControlSystem.API.Models.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessUnit");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.DeliveryNoteItem", b =>
                {
                    b.HasOne("StockControlSystem.API.Models.DeliveryNote", "DeliveryNote")
                        .WithMany("Items")
                        .HasForeignKey("DeliveryNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockControlSystem.API.Models.SerialStock", "SerialStock")
                        .WithMany()
                        .HasForeignKey("SerialStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryNote");

                    b.Navigation("SerialStock");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.PRVDevice", b =>
                {
                    b.HasOne("StockControlSystem.API.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.PRVService", b =>
                {
                    b.HasOne("StockControlSystem.API.Models.PRVDevice", "PRVDevice")
                        .WithMany()
                        .HasForeignKey("PRVDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockControlSystem.API.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PRVDevice");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.ServiceDocument", b =>
                {
                    b.HasOne("StockControlSystem.API.Models.PRVService", "PRVService")
                        .WithMany()
                        .HasForeignKey("PRVServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PRVService");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.Site", b =>
                {
                    b.HasOne("StockControlSystem.API.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockControlSystem.API.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("StockControlSystem.API.Models.DeliveryNote", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
